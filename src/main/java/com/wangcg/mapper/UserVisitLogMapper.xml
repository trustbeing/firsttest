<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangcg.dao.UserVisitLogMapper" >
  <resultMap id="BaseResultMap" type="com.wangcg.model.UserVisitLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="client_user_agent" property="clientUserAgent" jdbcType="VARCHAR" />
    <result column="client_refer" property="clientRefer" jdbcType="VARCHAR" />
    <result column="api_url" property="apiUrl" jdbcType="VARCHAR" />
    <result column="client_ip" property="clientIp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, client_user_agent, client_refer, api_url, client_ip, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_visit_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_visit_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wangcg.model.UserVisitLog" >
    insert into user_visit_log (id, user_id, client_user_agent, 
      client_refer, api_url, client_ip, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{clientUserAgent,jdbcType=VARCHAR}, 
      #{clientRefer,jdbcType=VARCHAR}, #{apiUrl,jdbcType=VARCHAR}, #{clientIp,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wangcg.model.UserVisitLog" >
    insert into user_visit_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="clientUserAgent != null" >
        client_user_agent,
      </if>
      <if test="clientRefer != null" >
        client_refer,
      </if>
      <if test="apiUrl != null" >
        api_url,
      </if>
      <if test="clientIp != null" >
        client_ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="clientUserAgent != null" >
        #{clientUserAgent,jdbcType=VARCHAR},
      </if>
      <if test="clientRefer != null" >
        #{clientRefer,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null" >
        #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangcg.model.UserVisitLog" >
    update user_visit_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="clientUserAgent != null" >
        client_user_agent = #{clientUserAgent,jdbcType=VARCHAR},
      </if>
      <if test="clientRefer != null" >
        client_refer = #{clientRefer,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null" >
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        client_ip = #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangcg.model.UserVisitLog" >
    update user_visit_log
    set user_id = #{userId,jdbcType=BIGINT},
      client_user_agent = #{clientUserAgent,jdbcType=VARCHAR},
      client_refer = #{clientRefer,jdbcType=VARCHAR},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      client_ip = #{clientIp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>